
import java.util.Base64;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Johannes Loibner
 */
public class MainGUI extends javax.swing.JFrame implements ThreadCompleteListener{

    private boolean readData = false;
    private MainController mc;
    private HTTPThread thread;
    /**
     * Creates new form MainGUI
     */
    public MainGUI() 
    {
        initComponents();
        JPasswordField jpf = new JPasswordField(24);
        JLabel jl = new JLabel("Please enter the password for your key! If do have one, you can set one here: ");
        Box box = Box.createHorizontalBox();
        box.add(jl);
        box.add(jpf);
        int x = JOptionPane.showConfirmDialog(this, box, "Password", JOptionPane.OK_CANCEL_OPTION);
        if(x == JOptionPane.OK_OPTION && !(new String(jpf.getPassword())).equals(""))
        {
            mc = new MainController(new String(jpf.getPassword()));
            this.setSize(500, 900);
            this.setLocationRelativeTo(null);

            this.startUpRoutine();

            thread = new HTTPThread(mc.getUser(), mc.getServer());
            thread.addListener(this);
            thread.start();
            //mc.getUser().setMsgId(0);
        }
        else
        {
            System.exit(0);
        }
    }
    
    private void startUpRoutine()
    {
        String number = JOptionPane.showInputDialog(this, "Please enter your phone number in the format +43##########:");
        if(number != null && number.startsWith("+"))
        {
            number = number.substring(3);
            
            mc.getUser().setPhoneNumber(number);
            readData = mc.readUserData();
            
            int res = -1;
            if(readData)
            {
                res = JOptionPane.showConfirmDialog(this, "We found a valid key that can be used. Do you want to create a new one anyhow?", "Found key", JOptionPane.YES_NO_OPTION);
            }
            
            if(!readData || res == JOptionPane.YES_OPTION)
            {
                mc.createNewPrivateKey();
                if(mc.createQRCode())
                {
                    System.out.println(Base64.getEncoder().encodeToString(mc.getUser().getPrivateKey()));
                    QRGUI qg = new QRGUI(this, true, mc.getQrCode());
                    qg.setVisible(true);
                    mc.getQrCode().delete();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "There was an error when creating the QRCode. Please restart!", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btExit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taMessages = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btExit.setText("Exit");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onExit(evt);
            }
        });
        getContentPane().add(btExit, java.awt.BorderLayout.PAGE_END);

        taMessages.setColumns(20);
        taMessages.setRows(5);
        jScrollPane1.setViewportView(taMessages);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onExit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onExit
        if(mc.writeUserData())
        {
            System.exit(0);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Error while saving the key!", "ERROR", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_onExit

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea taMessages;
    // End of variables declaration//GEN-END:variables

    @Override
    public void notifyOfThreadComplete(String message) 
    {
        String msg = mc.decryptMessage(message);
        
        if(msg != null)
        {
            String text = taMessages.getText();
            text += "\n------------------------------\n";
            text += msg;
            taMessages.setText(text);
            taMessages.setCaretPosition(taMessages.getDocument().getLength());
        }

        thread = new HTTPThread(mc.getUser(), mc.getServer());
        thread.addListener(this);
        thread.start();
    }
}
